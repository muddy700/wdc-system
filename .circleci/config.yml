version: 2.1

container_config: &container_config
  docker:
    - image: circleci/node:14.17.0


commands:
  setup_project_files:
    description: Checkout and install npm packages
    steps:
      - checkout
      - run:
          name: Install npm packages
          command: npm install
jobs:
  # run_unit_tests:
  #   <<: *container_config
  #   steps:
  #     - setup_project_files
  #     - run:
  #         name: Run Unit Tests
  #         command: npm test

  # check_code_style:
  #   <<: *container_config
  #   steps:
  #     - setup_project_files
  #     - run:
  #         name: Inspect code style
  #         command: npm lint
  # deploy_to_staging:
  #   <<: *container_config
  #   steps:
  #     - add_ssh_keys:
  #         fingerprints:
  #           - ${SSH_FINGERPRINT}
  #     - run:
  #         name: Deploy to staging
  #         command: |
  #           ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} "cd /var/www/finlink-api && git stash && git pull origin develop && sudo chmod 777 /var/www/finlink-api/.circleci/post-install.sh && /var/www/finlink-api/.circleci/post-install.sh"
  deploy_to_production:
    <<: *container_config
    steps:
      - add_ssh_keys:
          fingerprints:
            - ${SSH_FINGERPRINT_PROD}
      - run:
          name: Deploy to production
          command: |
            ssh -o StrictHostKeyChecking=no ${SSH_USER_PROD}@${SSH_HOST_PROD} "cd /var/www/crm-api && git stash && git pull origin develop && sudo chmod 777 /var/www/crm-api/.circleci/post-install.sh && /var/www/crm-api/.circleci/post-install.sh"
workflows:
  version: 2
  build:
    jobs:
     # - run_unit_tests
      # - check_code_style
      # - deploy_to_staging:
      #     filters:
      #       branches:
      #         only: develop
      - deploy_to_production:
          filters:
            branches:
              only: develop